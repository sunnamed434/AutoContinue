name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Triggers on semantic version tags (1.0.0, 2.1.3, etc.)

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper tagging
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Update version from tag
        run: node scripts/version.js
        env:
          VERSION: ${{ github.ref_name }}
          
      - name: Run linter
        run: npm run lint
        
      - name: Run tests with coverage
        run: npm run test:ci

      - name: Enforce coverage threshold
        run: |
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "coverage-summary.json not found; did tests run with coverage?";
            ls -la coverage || true;
            exit 1;
          fi
          COVERAGE=$(node -e "const fs=require('fs');const c=JSON.parse(fs.readFileSync('coverage/coverage-summary.json','utf8'));console.log(c.total.lines.pct)")
          echo "Current coverage: ${COVERAGE}%"
          echo "Required coverage: 70%"
          awk "BEGIN {exit (${COVERAGE}>=70)?0:1}"
          if [ $? -ne 0 ]; then
            echo "❌ Coverage ${COVERAGE}% is below the required 70%"; exit 1;
          else
            echo "✅ Coverage ${COVERAGE}% meets the required 70%";
          fi

      - name: Build all platforms
        run: |
          npm run build:chrome
          npm run build:firefox
          npm run build:safari
        env:
          VERSION: ${{ github.ref_name }}
          
      - name: Create release directory
        run: mkdir -p release
        
      - name: Package Chrome extension
        run: |
          cd dist
          zip -r ../release/AutoContinue-Chrome-${{ github.ref_name }}.zip .
          cd ..
          
      - name: Package Firefox extension
        run: |
          cd dist
          zip -r ../release/AutoContinue-Firefox-${{ github.ref_name }}.zip .
          cd ..
          
      - name: Package Safari extension
        run: |
          cd dist
          zip -r ../release/AutoContinue-Safari-${{ github.ref_name }}.zip .
          cd ..
          
      - name: Create source archive
        run: |
          git archive --format=zip --output=release/AutoContinue-Source-${{ github.ref_name }}.zip HEAD
          
      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 HEAD~1 >/dev/null 2>&1; then
            PREV_TAG=$(git describe --tags --abbrev=0 HEAD~1)
            CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --max-count=20)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: AutoContinue ${{ github.ref_name }}
          body: |
            ## What's New in ${{ github.ref_name }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            ### Browser Extensions
            - **Chrome/Chromium**: [AutoContinue-Chrome-${{ github.ref_name }}.zip](https://github.com/sunnamed434/AutoContinue/releases/download/${{ github.ref_name }}/AutoContinue-Chrome-${{ github.ref_name }}.zip)
            - **Firefox**: [AutoContinue-Firefox-${{ github.ref_name }}.zip](https://github.com/sunnamed434/AutoContinue/releases/download/${{ github.ref_name }}/AutoContinue-Firefox-${{ github.ref_name }}.zip)
            - **Safari**: [AutoContinue-Safari-${{ github.ref_name }}.zip](https://github.com/sunnamed434/AutoContinue/releases/download/${{ github.ref_name }}/AutoContinue-Safari-${{ github.ref_name }}.zip)
            
            ### Source Code
            - **Source Code**: [AutoContinue-Source-${{ github.ref_name }}.zip](https://github.com/sunnamed434/AutoContinue/releases/download/${{ github.ref_name }}/AutoContinue-Source-${{ github.ref_name }}.zip)
            
            ## Installation
            
            1. Download the appropriate extension for your browser
            2. Extract the ZIP file
            3. Open your browser's extension management page
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the extracted folder
            
          files: |
            release/AutoContinue-Chrome-${{ github.ref_name }}.zip
            release/AutoContinue-Firefox-${{ github.ref_name }}.zip
            release/AutoContinue-Safari-${{ github.ref_name }}.zip
            release/AutoContinue-Source-${{ github.ref_name }}.zip
          draft: false
          prerelease: ${{ contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-chrome:
    name: Publish to Chrome Web Store
    runs-on: ubuntu-latest
    needs: release
    if: ${{ !contains(github.ref_name, 'alpha') && !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'rc') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Update version from tag
        run: node scripts/version.js
        env:
          VERSION: ${{ github.ref_name }}
          
      - name: Build Chrome extension
        run: npm run build:chrome
        env:
          VERSION: ${{ github.ref_name }}
          
      - name: Package Chrome extension for Web Store
        run: |
          cd dist
          zip -r ../AutoContinue-Chrome-WebStore-${{ github.ref_name }}.zip . -x "*.map"
          cd ..
          
      - name: Install Chrome Web Store Upload CLI
        run: npm install --save-dev chrome-webstore-upload-cli
        
      - name: Publish to Chrome Web Store
        run: |
          npx chrome-webstore-upload \
            --source AutoContinue-Chrome-WebStore-${{ github.ref_name }}.zip \
            --extension-id $CHROME_WEB_STORE_EXTENSION_ID \
            --client-id $CHROME_WEB_STORE_CLIENT_ID \
            --client-secret $CHROME_WEB_STORE_CLIENT_SECRET \
            --refresh-token $CHROME_WEB_STORE_REFRESH_TOKEN
        env:
          CHROME_WEB_STORE_EXTENSION_ID: ${{ secrets.CHROME_WEB_STORE_EXTENSION_ID }}
          CHROME_WEB_STORE_CLIENT_ID: ${{ secrets.CHROME_WEB_STORE_CLIENT_ID }}
          CHROME_WEB_STORE_CLIENT_SECRET: ${{ secrets.CHROME_WEB_STORE_CLIENT_SECRET }}
          CHROME_WEB_STORE_REFRESH_TOKEN: ${{ secrets.CHROME_WEB_STORE_REFRESH_TOKEN }}
