name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests with coverage
      run: npm run test:ci
      
    - name: Build extensions (Chrome/Firefox/Safari)
      if: matrix.node-version == '20.x'
      run: |
        npm run build:chrome
        npm run build:firefox
        npm run build:safari

    - name: Package Chrome build
      if: matrix.node-version == '20.x'
      run: |
        mkdir -p artifacts
        cd dist
        zip -r ../artifacts/AutoContinue-Chrome-${{ github.sha }}.zip . -x "*.map"
        cd ..

    - name: Package Firefox build
      if: matrix.node-version == '20.x'
      run: |
        cd dist
        zip -r ../artifacts/AutoContinue-Firefox-${{ github.sha }}.zip . -x "*.map"
        cd ..

    - name: Package Safari build
      if: matrix.node-version == '20.x'
      run: |
        cd dist
        zip -r ../artifacts/AutoContinue-Safari-${{ github.sha }}.zip . -x "*.map"
        cd ..
      
    - name: Check coverage threshold
      run: |
        if [ ! -f coverage/coverage-summary.json ]; then
          echo "coverage-summary.json not found; did tests run with coverage?";
          ls -la coverage || true;
          exit 1;
        fi
        COVERAGE=$(node -e "const fs=require('fs');const c=JSON.parse(fs.readFileSync('coverage/coverage-summary.json','utf8'));console.log(c.total.lines.pct)")
        echo "Current coverage: ${COVERAGE}%"
        echo "Required coverage: 70%"
        awk "BEGIN {exit (${COVERAGE}>=70)?0:1}"
        if [ $? -ne 0 ]; then
          echo "❌ Coverage ${COVERAGE}% is below the required 70%"; exit 1;
        else
          echo "✅ Coverage ${COVERAGE}% meets the required 70%";
        fi
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      if: matrix.node-version == '20.x'
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload Chrome artifact
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: AutoContinue-Chrome-${{ github.sha }}
        path: artifacts/AutoContinue-Chrome-${{ github.sha }}.zip

    - name: Upload Firefox artifact
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: AutoContinue-Firefox-${{ github.sha }}
        path: artifacts/AutoContinue-Firefox-${{ github.sha }}.zip

    - name: Upload Safari artifact
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: AutoContinue-Safari-${{ github.sha }}
        path: artifacts/AutoContinue-Safari-${{ github.sha }}.zip

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for Chrome
      run: npm run build:chrome
      
    - name: Build for Firefox
      run: npm run build:firefox
      
    - name: Build for Safari
      run: npm run build:safari
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-builds
        path: dist/
        retention-days: 30